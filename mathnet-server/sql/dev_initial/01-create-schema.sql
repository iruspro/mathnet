---- Base app schema
-- Mather
CREATE TYPE status AS ENUM ('online', 'offline');

CREATE TABLE mather (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  -- Mather auth data
  username VARCHAR(128) NOT NULL UNIQUE,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  is_active BOOLEAN NOT NULL DEFAULT FALSE, 
  is_staff BOOLEAN NOT NULL DEFAULT FALSE,

  -- Mather profile data
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  status status NOT NULL DEFAULT 'offline'
);

CREATE TABLE user_group (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE mather_user_group (
  mather_id BIGINT NOT NULL,
  group_id BIGINT NOT NULL,
  
  PRIMARY KEY (mather_id, group_id),
  FOREIGN KEY (mather_id) REFERENCES mather (id) ON DELETE CASCADE,
  FOREIGN KEY (group_id) REFERENCES user_group (id) ON DELETE CASCADE
);

CREATE TABLE mather_friends (
  mather_id BIGINT NOT NULL,
  friend_id BIGINT NOT NULL,

  PRIMARY KEY (mather_id, friend_id),
  FOREIGN KEY (mather_id) REFERENCES mather (id) ON DELETE CASCADE,
  FOREIGN KEY (friend_id) REFERENCES mather (id) ON DELETE CASCADE,
  CHECK (mather_id != friend_id)
);

-- Reaction
-- TODO: Implement entity
CREATE TABLE emoji (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  unicode VARCHAR(16)
);

-- TODO: Implement entity
CREATE TABLE reaction (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  mather_id BIGINT NOT NULL,
  emoji_id BIGINT NOT NULL,
  count INT,

  FOREIGN KEY (mather_id) REFERENCES mather (id) ON DELETE CASCADE,
  FOREIGN KEY (emoji_id) REFERENCES emoji (id) ON DELETE CASCADE
);

-- Comment
-- TODO: Implement entity
CREATE TABLE comment (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  content TEXT NOT NULL,
  mather_id BIGINT NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  on_latex BOOLEAN NOT NULL DEFAULT FALSE,

  FOREIGN KEY (mather_id) REFERENCES mather (id) ON DELETE CASCADE
);

CREATE TABLE comment_reaction (
  comment_id BIGINT NOT NULL,
  reaction_id BIGINT NOT NULL,

  PRIMARY KEY (comment_id, reaction_id),
  FOREIGN KEY (comment_id) REFERENCES comment (id) ON DELETE CASCADE,
  FOREIGN KEY (reaction_id) REFERENCES reaction (id) ON DELETE CASCADE
);

-- Thought
CREATE TABLE thought (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  content varchar(255) NOT NULL,
  mather_id BIGINT NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  on_latex BOOLEAN NOT NULL DEFAULT FALSE,

  FOREIGN KEY (mather_id) REFERENCES mather (id) ON DELETE CASCADE
);

CREATE TABLE thought_reaction (
  thought_id BIGINT NOT NULL,
  reaction_id BIGINT NOT NULL,

  PRIMARY KEY (thought_id, reaction_id),
  FOREIGN KEY (thought_id) REFERENCES thought (id) ON DELETE CASCADE,
  FOREIGN KEY (reaction_id) REFERENCES reaction (id) ON DELETE CASCADE
);

CREATE TABLE thought_comment (
  thought_id BIGINT NOT NULL,
  comment_id BIGINT NOT NULL,

  PRIMARY KEY (thought_id, comment_id),
  FOREIGN KEY (thought_id) REFERENCES thought (id) ON DELETE CASCADE,
  FOREIGN KEY (comment_id) REFERENCES comment (id) ON DELETE CASCADE
);

-- Post
-- TODO: Implement entity
CREATE TABLE post (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  title VARCHAR(255) NOT NULL,
  content TEXT NOT NULL,
  mather_id BIGINT NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  on_latex BOOLEAN NOT NULL DEFAULT FALSE,

  FOREIGN KEY (mather_id) REFERENCES mather (id) ON DELETE CASCADE
);

CREATE TABLE post_reaction (
  post_id BIGINT NOT NULL,
  reaction_id BIGINT NOT NULL,

  PRIMARY KEY (post_id, reaction_id),
  FOREIGN KEY (post_id) REFERENCES post (id) ON DELETE CASCADE,
  FOREIGN KEY (reaction_id) REFERENCES reaction (id) ON DELETE CASCADE
);

CREATE TABLE post_comment (
  post_id BIGINT NOT NULL,
  comment_id BIGINT NOT NULL,

  PRIMARY KEY (post_id, comment_id),
  FOREIGN KEY (post_id) REFERENCES post (id) ON DELETE CASCADE,
  FOREIGN KEY (comment_id) REFERENCES comment (id) ON DELETE CASCADE
);

-- Task
-- TODO: Implement entity
CREATE TABLE task (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  title VARCHAR(255) NOT NULL,
  content TEXT NOT NULL,
  mather_id BIGINT NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  is_private BOOLEAN NOT NULL DEFAULT FALSE,
  is_solved BOOLEAN NOT NULL DEFAULT FALSE,
  on_latex BOOLEAN NOT NULL DEFAULT FALSE,

  FOREIGN KEY (mather_id) REFERENCES mather (id) ON DELETE CASCADE
);

CREATE TABLE task_reaction (
  task_id BIGINT NOT NULL,
  reaction_id BIGINT NOT NULL,

  PRIMARY KEY (task_id, reaction_id),
  FOREIGN KEY (task_id) REFERENCES task (id) ON DELETE CASCADE,
  FOREIGN KEY (reaction_id) REFERENCES reaction (id) ON DELETE CASCADE
);

CREATE TABLE task_comment (
  task_id BIGINT NOT NULL,
  comment_id BIGINT NOT NULL,

  PRIMARY KEY (task_id, comment_id),
  FOREIGN KEY (task_id) REFERENCES task (id) ON DELETE CASCADE,
  FOREIGN KEY (comment_id) REFERENCES comment (id) ON DELETE CASCADE
);

-- Message
CREATE TABLE message (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  chat_id BIGINT NOT NULL,
  content VARCHAR(1024),
  mather_id BIGINT NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  is_read BOOLEAN NOT NULL DEFAULT FALSE,
  
  is_edited BOOLEAN NOT NULL DEFAULT FALSE,
  edited_at TIMESTAMPTZ,

  FOREIGN KEY (mather_id) REFERENCES mather (id) ON DELETE CASCADE,

  CHECK (
    (is_edited AND edited_at IS NOT NULL)
    OR
    (NOT is_edited AND edited_at IS NULL)
  )
);

CREATE TABLE message_reaction (
  message_id BIGINT NOT NULL,
  reaction_id BIGINT NOT NULL,

  PRIMARY KEY (message_id, reaction_id),
  FOREIGN KEY (message_id) REFERENCES message (id) ON DELETE CASCADE,
  FOREIGN KEY (reaction_id) REFERENCES reaction (id) ON DELETE CASCADE
);

-- Chat
CREATE TYPE chat_type AS ENUM ('personal', 'group');

CREATE TABLE chat (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  chat_type chat_type NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  last_message_id BIGINT,

  FOREIGN KEY (last_message_id) REFERENCES message (id) ON DELETE SET NULL
);

ALTER TABLE message
ADD CONSTRAINT fk_chat
FOREIGN KEY (chat_id) REFERENCES chat (id)
ON DELETE CASCADE;

CREATE TABLE chat_mather (
  mather_id BIGINT NOT NULL,
  chat_id BIGINT NOT NULL,

  joined_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  is_admin BOOLEAN NOT NULL,

  PRIMARY KEY (mather_id, chat_id),
  FOREIGN KEY (mather_id) REFERENCES mather (id) ON DELETE CASCADE,
  FOREIGN KEY (chat_id) REFERENCES chat (id) ON DELETE CASCADE
);